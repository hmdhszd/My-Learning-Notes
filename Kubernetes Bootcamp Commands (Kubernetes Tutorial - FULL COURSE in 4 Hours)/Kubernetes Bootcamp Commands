




kubectl create  deployment nginx-deployment --image=nginx






-------------------------------------------------------------------------






▶ kubectl get pods                      
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-6767546888-mjff4   1/1     Running   0          37m

~                                                                                                                             
▶ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-84cd76b964   1         1         1       79m

~                                                                                                                             
▶ kubectl get deployments
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   1/1     1            1           79m





-------------------------------------------------------------------------
-------------------------------------------------------------------------




export EDITOR='code --wait'



kubectl edit deployment nginx-deployment

change replica to 3



-------------------------------------------------------------------------





~                                                                                                                             
▶ kubectl get pods                      
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-6767546888-7hqnz   1/1     Running   0          36m
nginx-deployment-6767546888-d6hzx   1/1     Running   0          36m
nginx-deployment-6767546888-mjff4   1/1     Running   0          37m

~                                                                                                                             
▶ kubectl get replicaset
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-6767546888   3         3         3       37m
nginx-deployment-84cd76b964   0         0         0       79m

~                                                                                                                             
▶ kubectl get deployments
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   3/3     3            3           79m






-------------------------------------------------------------------------
-------------------------------------------------------------------------





kubectl create  deployment mongo-depl --image=mongo





-------------------------------------------------------------------------





▶ kubectl get pods
NAME                                READY   STATUS    RESTARTS   AGE
mongo-dep-f4fb7cd6d-m48hg           1/1     Running   0          37m
nginx-deployment-6767546888-7hqnz   1/1     Running   0          40m
nginx-deployment-6767546888-d6hzx   1/1     Running   0          40m
nginx-deployment-6767546888-mjff4   1/1     Running   0          42m

~                                                                                                                             
▶ kubectl get replicasets
NAME                          DESIRED   CURRENT   READY   AGE
mongo-dep-f4fb7cd6d           1         1         1       37m
nginx-deployment-6767546888   3         3         3       42m
nginx-deployment-84cd76b964   0         0         0       83m

~                                                                                                                             
▶ kubectl get deployments
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
mongo-dep          1/1     1            1           37m
nginx-deployment   3/3     3            3           84m






-------------------------------------------------------------------------
-------------------------------------------------------------------------





▶ kubectl exec -it mongo-dep-f4fb7cd6d-m48hg -- bin/bash
root@mongo-dep-f4fb7cd6d-m48hg:/# 
root@mongo-dep-f4fb7cd6d-m48hg:/# 
root@mongo-dep-f4fb7cd6d-m48hg:/# ls
bin   data  docker-entrypoint-initdb.d  home        lib    lib64   media  opt   root  sbin  sys  usr
boot  dev   etc                         js-yaml.js  lib32  libx32  mnt    proc  run   srv   tmp  var
 






-------------------------------------------------------------------------
-------------------------------------------------------------------------






▶ kubectl delete deployment nginx-deployment 
deployment.apps "nginx-deployment" deleted

~                                                                                                                                                
▶ kubectl get pods                           
NAME                                READY   STATUS        RESTARTS   AGE
mongo-dep-f4fb7cd6d-m48hg           1/1     Running       0          45m
nginx-deployment-6767546888-7hqnz   0/1     Terminating   0          48m
nginx-deployment-6767546888-d6hzx   0/1     Terminating   0          48m
nginx-deployment-6767546888-mjff4   0/1     Terminating   0          49m

~                                                                                                                                                
▶ kubectl get deployments                    
NAME        READY   UP-TO-DATE   AVAILABLE   AGE
mongo-dep   1/1     1            1           45m

~                                                                                                                                                
▶ kubectl get replicasets
NAME                  DESIRED   CURRENT   READY   AGE
mongo-dep-f4fb7cd6d   1         1         1       45m






-------------------------------------------------------------------------
-------------------------------------------------------------------------




nginx-deployment.yaml:



apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-app
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
        - name: nginx-container
          image: nginx:1.16
          ports:
           - containerPort: 8080





-------------------------------------------------------------------------





▶ kubectl apply -f nginx-deployment.yaml
deployment.apps/nginx-deployment created



▶ kubectl get deployments            
\NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   1/1     1            1           111s



▶ kubectl get pods                   
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-779bf46875-r8p2m   1/1     Running   0          115



▶ kubectl get replicasets
NAME                          DESIRED   CURRENT   READY   AGE
nginx-deployment-779bf46875   1         1         1       2m1s





-------------------------------------------------------------------------
-------------------------------------------------------------------------




change replicas to 2 in the deployment yaml file:



▶ kubectl apply -f nginx-deployment.yaml
deployment.apps/nginx-deployment configured



▶ kubectl get pods                      
NAME                                READY   STATUS    RESTARTS   AGE
nginx-deployment-779bf46875-gfj5j   1/1     Running   0          2s
nginx-deployment-779bf46875-r8p2m   1/1     Running   0          3m8s




-------------------------------------------------------------------------
-------------------------------------------------------------------------




nginx-service.yaml:




apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080






-------------------------------------------------------------------------





▶ kubectl get services           
NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE
kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP   53d
nginx-service   ClusterIP   10.102.225.81   <none>        80/TCP    25s





-------------------------------------------------------------------------





▶ kubectl describe service nginx-service
 Name:              nginx-service
Namespace:         default
Labels:            <none>
Annotations:       <none>
Selector:          app=nginx-app
Type:              ClusterIP
IP Families:       <none>
IP:                10.102.225.81
IPs:               10.102.225.81
Port:              <unset>  80/TCP
TargetPort:        8080/TCP
Endpoints:         172.17.0.5:8080,172.17.0.7:8080
Session Affinity:  None
Events:            <none>






-------------------------------------------------------------------------





▶ kubectl get pods -o wide
NAME                                READY   STATUS    RESTARTS   AGE     IP           NODE       NOMINATED NODE   READINESS GATES
nginx-deployment-67554b58dc-75xpj   1/1     Running   0          8m50s   172.17.0.5   minikube   <none>           <none>
nginx-deployment-67554b58dc-8l9gj   1/1     Running   0          8m52s   172.17.0.7   minikube   <none>           <none>






-------------------------------------------------------------------------






▶ kubectl get deployment nginx-deployment
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
nginx-deployment   2/2     2            2           48m


▶ kubectl get deployment nginx-deployment -o yaml 
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"nginx-app"},"name":"nginx-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"nginx-app"}},"template":{"metadata":{"labels":{"app":"nginx-app"}},"spec":{"containers":[{"image":"nginx:1.16","name":"nginx-container","ports":[{"containerPort":8080}]}]}}}}
  creationTimestamp: "2021-12-07T12:27:56Z"
  generation: 3
  labels:
    app: nginx-app
  name: nginx-deployment
  namespace: default
  resourceVersion: "361383"
  uid: 57792ac5-2486-4fa6-b00d-d29707ee5b5b
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-app
    spec:
      containers:
      - image: nginx:1.16
        imagePullPolicy: IfNotPresent
        name: nginx-container
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2021-12-07T12:31:03Z"
    lastUpdateTime: "2021-12-07T12:31:03Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-12-07T12:27:56Z"
    lastUpdateTime: "2021-12-07T13:03:05Z"
    message: ReplicaSet "nginx-deployment-67554b58dc" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2





-------------------------------------------------------------------------











-------------------------------------------------------------------------





▶ kubectl delete -f nginx-deployment.yaml 
deployment.apps "nginx-deployment" deleted

▶ kubectl delete -f nginx-service.yaml    
service "nginx-service" deleted






-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------




▶ echo -n 'username' | base64
dXNlcm5hbWU=

▶ echo -n 'password' | base64
cGFzc3dvcmQ=





-------------------------------------------------------------------------




mongo-secret.yaml:


apiVersion: v1
kind: Secret
metadata:
  name: mongodc-secret
type: Opaque
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=




-------------------------------------------------------------------------





▶ kubectl apply -f mongo-secret.yaml 
secret/mongodb-secret created


▶ kubectl get secrets                
NAME                  TYPE                                  DATA   AGE
default-token-x4cfc   kubernetes.io/service-account-token   3      53d
mongodb-secret        Opaque                                2      2s






-------------------------------------------------------------------------



mongo-deployment-service.yaml:


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo
          ports:
           - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017





-------------------------------------------------------------------------





▶ kubectl apply -f mongo-deployment-service.yaml 
deployment.apps/mongo-deployment created
service/mongo-service created



▶ kubectl get deployments               
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
mongo-deployment   1/1     1            1           12s



▶ kubectl get services                                 
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)     AGE
kubernetes      ClusterIP   10.96.0.1      <none>        443/TCP     53d
mongo-service   ClusterIP   10.99.227.71   <none>        27017/TCP   22s
 


-------------------------------------------------------------------------





▶ kubectl describe service mongo-service
Name:              mongo-service
Namespace:         default
Labels:            <none>
Annotations:       <none>
Selector:          app=mongodb
Type:              ClusterIP
IP Families:       <none>
IP:                10.99.227.71
IPs:               10.99.227.71
Port:              <unset>  27017/TCP
TargetPort:        27017/TCP
Endpoints:         172.17.0.5:27017
Session Affinity:  None
Events:            <none>





▶ kubectl get pods -o wide
NAME                               READY   STATUS    RESTARTS   AGE     IP           NODE       NOMINATED NODE   READINESS GATES
mongo-deployment-8f6675bc5-g9sxm   1/1     Running   0          8m38s   172.17.0.5   minikube   <none>           <none>






-------------------------------------------------------------------------




mongo-configmap.yaml:




apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
data:
  database_url: mongo-service





-------------------------------------------------------------------------





▶ kubectl apply -f mongo-configmap.yaml
configmap/mongodb-configmap created


▶ kubectl get configmaps               
NAME                DATA   AGE
kube-root-ca.crt    1      54d
mongodb-configmap   1      13s






-------------------------------------------------------------------------
-------------------------------------------------------------------------





mongo-express.yaml:




apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express
          ports:
           - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: mongodb-configmap
                  key: database_url
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  selector:
    app: mongo-express
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30000



-------------------------------------------------------------------------




▶ kubectl apply -f mongo-express.yaml  
deployment.apps/mongo-express created
service/mongo-express-service created


▶ kubectl get deployments            
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
mongo-deployment   1/1     1            1           102m
mongo-express      0/1     1            0           12s


▶ kubectl get pods       
NAME                               READY   STATUS              RESTARTS   AGE
mongo-deployment-8f6675bc5-g9sxm   1/1     Running             0          102m
mongo-express-78fcf796b8-k62gk     0/1     ContainerCreating   0          17s



▶ kubectl get services                           
NAME                    TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes              ClusterIP      10.96.0.1      <none>        443/TCP          54d
mongo-express-service   LoadBalancer   10.99.6.218    <pending>     8081:30000/TCP   59s
mongo-service           ClusterIP      10.99.227.71   <none>        27017/TCP        110m





-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------




for external service and assign the service an external IP address we use this Type


type: LoadBalancer

nodePort: 30000

(30000 - 32767)





Default Type = ClusterIP     (Only Internal IP Address)


-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------





▶ minikube service mongo-express-service
|-----------|-----------------------|-------------|---------------------------|
| NAMESPACE |         NAME          | TARGET PORT |            URL            |
|-----------|-----------------------|-------------|---------------------------|
| default   | mongo-express-service |        8081 | http://192.168.49.2:30000 |
|-----------|-----------------------|-------------|---------------------------|
🎉  Opening service default/mongo-express-service in default browser...







-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------











-------------------------------------------------------------------------