

show RUNNING containers:

▶ docker ps



------------------------------------------------------------------------



show ALL containers:

▶ docker ps -a



------------------------------------------------------------------------
------------------------------------------------------------------------



Help of Docker:


▶ docker info --help



------------------------------------------------------------------------

------------------------------------------------------------------------



show the latest container that i run:


▶ docker ps -l





show the last 5 container that i run:


▶ docker ps -n 5



------------------------------------------------------------------------
------------------------------------------------------------------------



Run a container:


▶ docker run -it -d --name test1 busybox



------------------------------------------------------------------------



Stop a container:


▶ docker stop mycontainer



------------------------------------------------------------------------
------------------------------------------------------------------------



show IDs of RUNNING containers:

▶ docker ps -q



------------------------------------------------------------------------



show IDs of ALL containers:

▶ docker ps -q -a




------------------------------------------------------------------------
------------------------------------------------------------------------



show Size of RUNNING containers:

▶ docker ps -s



------------------------------------------------------------------------



show Size of ALL containers:

▶ docker ps -s -a



------------------------------------------------------------------------
------------------------------------------------------------------------



show all info of all containers:


▶ docker ps --no-trunc




------------------------------------------------------------------------



show all info of a specific containers:


▶ docker ps -a -f "name=test1"




----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------





show images inside our server:

[root@localhost ~]# docker images

REPOSITORY    TAG       IMAGE ID       CREATED       SIZE
hello-world   latest    d1165f221234   3 weeks ago   13.3kB






----------------------------------------------------------------------------------------




[root@localhost ~]# docker images --help

Usage:  docker images [OPTIONS] [REPOSITORY[:TAG]]

List images

Options:
  -a, --all             Show all images (default hides intermediate images)
      --digests         Show digests
  -f, --filter filter   Filter output based on conditions provided
      --format string   Pretty-print images using a Go template
      --no-trunc        Don't truncate output
  -q, --quiet           Only show image IDs





----------------------------------------------------------------------------------------





show info of a specific docker image:

[root@localhost ~]# docker images busybox:1

REPOSITORY   TAG       IMAGE ID   CREATED   SIZE





----------------------------------------------------------------------------------------



show IDs of ALL images:


[root@localhost ~]# docker images -q
d1165f221234




----------------------------------------------------------------------------------------



show all info of all images:


[root@localhost ~]# docker images --no-trunc

REPOSITORY    TAG       IMAGE ID                      CREATED       SIZE
hello-world   latest    sha256:d1165f2212346b2bab48cb01c1e39ee8ad1be46b87873d9ca7a4e434980a7726   3 weeks ago   13.3kB




----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------




[root@localhost ~]# docker pull --help

Usage:  docker pull [OPTIONS] NAME[:TAG|@DIGEST]

Pull an image or a repository from a registry

Options:
  -a, --all-tags                Download all tagged images in the repository
      --disable-content-trust   Skip image verification (default true)
      --platform string         Set platform if server is multi-platform capable
  -q, --quiet                   Suppress verbose output






----------------------------------------------------------------------------------------




Download docker image:

[root@localhost ~]# docker pull httpd




----------------------------------------------------------------------------------------



[root@localhost ~]# docker pull -a busybox


[root@localhost ~]# docker images

REPOSITORY    TAG       IMAGE ID       CREATED       SIZE
busybox       1-glibc   541480a10cb1   2 weeks ago   5.2MB
hello-world   latest    d1165f221234   3 weeks ago   13.3kB





----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------




docker create vs docker run:


The docker run command creates a container from a given image and starts the container



The docker create command creates a container from a given image and BUT does NOT starts the container

we should start it with "docker start" command




----------------------------------------------------------------------------------------





[root@localhost ~]# docker run --help 



  -d, --detach                         Run container in background and print container ID



[root@localhost ~]# docker run -d busybox
6c3e55a7f2fe83ff67c64e8ec237056ad7e18be48fdd2ab86c334e271f74ebd3



----------------------------------------------------------------------------------------




  -e, --env list                       Set environment variables



[root@localhost ~]# docker run -e PASSWORD=123 mysql




----------------------------------------------------------------------------------------




[root@localhost ~]# docker run --help 

      --env-file list                  Read in a file of environment





[root@localhost ~]# docker run --env-file ./my_env ubuntu




----------------------------------------------------------------------------------------




[root@localhost ~]# docker run --help 

  -h, --hostname string                Container host name


[root@localhost ~]# docker run -d --hostname=WEB httpd
75cdb189f9a56430c37e28a87bcca14118938a9d7ddb7bd9d27dce5fe29a89d4




----------------------------------------------------------------------------------------




[root@localhost ~]# docker run --help 

    --name string                    Assign a name to the container





[root@localhost ~]# docker run -d --name=MyWebServer httpd

119a1ee07126696b37544bc9399b2c551d3c7cc838dc68c2269972963bb180ca




[root@localhost ~]# docker ps

CONTAINER ID   IMAGE     COMMAND              CREATED         STATUS         PORTS     NAMES
119a1ee07126   httpd     "httpd-foreground"   5 seconds ago   Up 4 seconds   80/tcp    MyWebServer




----------------------------------------------------------------------------------------



Remove all containers:



[root@localhost ~]# docker rm -f $(docker ps -a -q)
119a1ee07126
75cdb189f9a5
d62c4f787c6b
25ca5f2d3f4e
6c3e55a7f2fe
f66e7f1d650a
02aa5cf716a2
047cc213055a
faae83ce7e6d
26cf594e10c3
23d8f8f27c0a




[root@localhost ~]# docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES








Remove a specific container:



[root@localhost ~]# docker rm -f TestName
TestName


[root@localhost ~]# docker ps 
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES




----------------------------------------------------------------------------------------




Get a bash from container:


[root@localhost ~]# docker run --help 

  -i, --interactive                    Keep STDIN open even if not attached

  -t, --tty                            Allocate a pseudo-TTY





[root@localhost ~]# docker run -d --name=TestName --hostname=TestHostName -it httpd
ea233171675f5c45957fc75a1e6334296120d69a6af981a9783b087500e666c7




[root@localhost ~]# docker ps 
CONTAINER ID   IMAGE     COMMAND              CREATED         STATUS         PORTS     NAMES
ea233171675f   httpd     "httpd-foreground"   7 seconds ago   Up 5 seconds   80/tcp    TestName



[root@localhost ~]# docker exec -it TestName bash
root@TestHostName:/usr/local/apache2# 




----------------------------------------------------------------------------------------



docker network connect

[root@localhost ~]# docker run --help 

    --link list                      Add link to another container




[root@localhost ~]# docker run -d -P  -link  nimmis/apache-php7  rabbitmq redis 




----------------------------------------------------------------------------------------



add ip to container:



[root@localhost ~]# docker run --help


      --ip string                      IPv4 address (e.g., 172.30.100.104)







[root@localhost ~]# docker network create --subnet=172.18.0.0/16 mynet123
23ba33c7c28809f44bd3e2e0203c1f1b72c7f086c75d048294a7bffbcd5c9e3b



[root@localhost ~]# docker run --net mynet123 --ip 172.18.0.22 -it httpd bash


root@a961fb77764f:/usr/local/apache2# ip addr






----------------------------------------------------------------------------------------





Map port from container to host:


[root@localhost ~]# docker run --help


  -p, --publish list                   Publish a container's port(s) to
                                       the host
  -P, --publish-all                    Publish all exposed ports to
                                       random ports





[root@localhost ~]# docker run -d -p 3306:3306 httpd

[root@localhost ~]# docker run -d -p 127.0.0.1:3306:3306 httpd






----------------------------------------------------------------------------------------






[root@localhost ~]# docker run --help 
      --restart string                 Restart policy to apply when a container exits (default "no")





[root@localhost ~]# docker update --restart unless-stopped redis

[root@localhost ~]# docker update --restart=always unless-stopped redis



----------------------------------------------------------------------------------------





[root@localhost ~]# docker run --help

  -v, --volume list                    Bind mount a volume





[root@localhost ~]# docker container run -it -v /home/hamid/Desktop/data:/var/lib/mysql -P mysql:latest






----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------



Docker rename:



root@localhost ~]# docker rename --help

Usage:  docker rename CONTAINER NEW_NAME

Rename a container




----------------------------------------------------------------------------------------








remove image:




[root@localhost ~]# docker rmi --help

Usage:  docker rmi [OPTIONS] IMAGE [IMAGE...]

Remove one or more images

Options:
  -f, --force      Force removal of the image
      --no-prune   Do not delete untagged parents









remove container:




[root@localhost ~]# docker rm --help

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers

Options:
  -f, --force     Force the removal of a running container (uses SIGKILL)
  -l, --link      Remove the specified link
  -v, --volumes   Remove anonymous volumes associated with the container
[root@localhost ~]# 






----------------------------------------------------------------------------------------





copy of a image:



[root@localhost ~]# docker tag --help

Usage:  docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]

Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE








[root@localhost ~]# docker tag busybox:latest mybusybox:test



[root@localhost ~]# docker images
busybox       latest          a9d583973f65   5 weeks ago    1.23MB
mybusybox     test            a9d583973f65   5 weeks ago    1.23MB











----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------






Docker search images in docker hub:



[root@localhost ~]# docker search ubuntu
NAME                                                      DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
ubuntu                                                    Ubuntu is a Debian-based Linux operating sys…   12103     [OK]       
dorowu/ubuntu-desktop-lxde-vnc                            Docker image to provide HTML5 VNC interface …   520                  [OK]
websphere-liberty                                         WebSphere Liberty multi-architecture images …   267       [OK]       
rastasheep/ubuntu-sshd                                    Dockerized SSH service, built on top of offi…   249                  [OK]
consol/ubuntu-xfce-vnc                                    Ubuntu container with "headless" VNC session…   236                  [OK]
ubuntu-upstart                                            Upstart is an event-based replacement for th…   110       [OK]       









[root@localhost ~]# docker search --filter "is-official=true" ubuntu
NAME                 DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
ubuntu               Ubuntu is a Debian-based Linux operating sys…   12103     [OK]       
websphere-liberty    WebSphere Liberty multi-architecture images …   267       [OK]       
ubuntu-upstart       Upstart is an event-based replacement for th…   110       [OK]       
neurodebian          NeuroDebian provides neuroscience research s…   81        [OK]       
ubuntu-debootstrap   debootstrap --variant=minbase --components=m…   44        [OK]       
open-liberty         Open Liberty multi-architecture images based…   43        [OK]       






----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------

















----------------------------------------------------------------------------------------










